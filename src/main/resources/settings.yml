# ---------------------------------- #
#      LavMusicBot Config            #
# ---------------------------------- #

# Your discord bot token, get it from https://discord.com/developers/applications
discord-bot-token: "YOUR_TOKEN_HERE"

# The default volume of the bot when it starts playing in a new server.
# Value must be between 1 and 100.
default-volume: 10

# Should the bot stop playing music when the voice-channel is empty ( aka everyone left and the bot is alone in the channel )
# Set to "false" to enable 24/7 music
stop-on-empty-channel: true


# if a playlist gets loaded, should the whole playlist be added to the queue?
# set to "false" to only add the first song
# set to "true" to add the whole playlist
add-full-playlists-to-queue: false

#The bot supports discords built in / command system, you can set an additional prefix for normal text commands here:
command-prefix: "."

# =======================
# The Bot can Operate in 2 modes:
# 1. Using one or mode(nodes.json file) Lavalink servers that need to be ran seperately
# 2. Using an Integrated Lavaplayer, wich means you can SKIP THIS SECTION
# =======================
operating-mode: lavaplayer # Either lavaplayer for using an integrated Lavaplayer or nodes to be using a Lavalink Server


# =======================
# Lavalink Server Configuration ( Only used if you are using a Lavalink Server and not an Integrated Lavaplayer )
# =======================

using-nodes-json-file: false # Set this to true if you are using a nodes.json file, if you want to use the bottom config, set this to false
nodes-json-file: "C:\\path\\to\\nodes.json" # The path to your nodes.json file


# Get these from your Lavalink provider or your own server.
# A list of public servers can be found at https://lavalink-list.appujet.site/

# The hostname or IP address of the Lavalink server.
lavalink-host: "lavalink.example.com"

# The port the Lavalink server is running on.
lavalink-port: 2000

# Set to 'true' if your Lavalink server uses a secure (SSL/TLS) connection.
lavalink-secure: false

# The password for your Lavalink server.
lavalink-password: "pleaseletmein"



# =======================
# Integrated Lavaplayer Configuration ( Only used if you are using an Integrated Lavaplayer )
# =======================

# After starting the bot for the first time, you will be asked to open a browser window and log into your youtube account.
#Then it will output the refresh token in console.
# If you dont want to do the whole oauth process again, you can just copy the refresh token from the console output,
#and paste it here.
youtube-oauth-refresh-token: ""

# The country code for the Lavalink server to search in what language for, default is "us"
country-code: "us"


# Additional Lavaplayer Sources Configuration (Only if you want to use one of these sources)

enable-spotify: false # if you enable this you need to fill out the spotify client id and secret:

# To get a Spotify clientId & clientSecret you must go to https://developer.spotify.com/dashboard and create a new application.
spotify-client-id: "YOUR_SPOTIFY_CLIENT_ID"
spotify-client-secret: "YOUR_SPOTIFY_CLIENT_SECRET"


# if you enable this you need to fill out the apple music token:
enable-apple-music: false

# To get a Apple Music token without a Developer Account:
#1. Go to https://music.apple.com
#2. Open DevTools and go to the Sources tab
#3. Search with this regex "(?<token>(ey[\w-]+)\.([\w-]+)\.([\w-]+))" in all index-*.js files
#4. Copy the token from the source code
apple-music-token: "YOUR_APPLE_MUSIC_TOKEN"


# if you enable this you need to fill out the deezer decryption key and alr cookie:
enable-deezer: false

# To get a Deezer decryption key go to https://gist.github.com/svbnet/b79b705a4c19d74896670c1ac7ad627e and follow the instructions
deezer-decryption-key: "YOUR_DEEZER_DECRYPTION_KEY"

# To obtain the Deezer ARL (Also Required Login) cookie,
# log in to your Deezer account through a web browser,
# open the browser's developer tools (usually by pressing F12),
# navigate to the "Storage" or "Application" tab, and find the "arl" cookie within the list of cookies.
# The ARL is a long alphanumeric string that you can then copy
deezer-arl-cookie: "YOUR_DEEZER_ARL_COOKIE"

# if you enable this you need to fill out the tidal token:
enable-tidal: false

# How to get a Tidal token:
# 1. Open Tidal Desktop
# 2. Start a track
# 3. Install 'Fiddler Everywhere' and enable for HTTPS captures
# 5. Login to the Tidal desktop app and start playing a track.
# 6. Stop Fiddler capture
# 7. Look for host: desktop.tidal.com;
# 8. Double click that request
# 9. In the Inspectors pane for scroll down to "Miscellaneous" and you should see "x-tidal-token"
# 10. Copy the token
tidal-token: "YOUR_TIDAL_TOKEN"



#########################
# Global Configuration #
#########################

# =========================
# Permissions Configuration
# =========================

# Set this to true if you want to enable permissions
permissions-enabled: false

# Set this to true if you want to use a blacklist instead of a whitelist
whitelist-acts-as-blacklist: false

# The role IDs of the roles you want to allow to use the bot
role-id-whitelist:
  - "123123123"
  - "456456456"


# ====================
# Lyrics Configuration
# ====================
# Enable or disable lyrics functionality
# Set to 'true' to enable the /lyrics command
lyrics-enabled: false

# MusixMatch Authentication (Required for lyrics)
# ---------------------------------------------
# To use the lyrics feature, you need to provide a valid MusixMatch user token.
# Here's how to get it:
# 1. Sign up for a free account at https://www.musixmatch.com/
# 2. Log in to your MusixMatch account in your web browser
# 3. Open Developer Tools (F12 or right-click -> Inspect)
# 4. Go to the 'Application' tab (or 'Storage' in Firefox)
# 5. In the left sidebar, expand 'Cookies' and select 'https://www.musixmatch.com'
# 6. Find the cookie named 'musixmatchUserToken'
# 7. Copy the token value (a long string of characters) and paste it below
musixmatch-user-cookie: "YOUR_MUSIXMATCH_USER_TOKEN"


# Enable of disable the live lyrics feature, it highlights the current line playing, only works with musixmatch
# I think this is the best feature
live-lyrics-enabled: true

# How many milliseconds to move the line earlier than the song, higher = line gets highlighted earlier
live-lyrics-ping-compensation: 5


# --- Do Not Edit Below This Line ---
version: "${project.version}"